{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Validation1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.p_array",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy Gitup data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DelimitedText1",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@item().file_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DelimitedText2",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@item().file_name",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@item().folder_name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Validation1",
				"type": "Validation",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"timeout": "0.12:00:00",
					"sleep": 10
				}
			},
			{
				"name": "gitupmetadata",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": "https://github.com/Hemanath0017/Azure-Project/tree/main"
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "gitupmetadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "gitupmetadata",
					"value": {
						"value": "@activity('gitupmetadata').output.Response",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"p_array": {
				"type": "string",
				"defaultValue": [
					{
						"folder name": "netflix_cast",
						"file name": "netflix_cast.csv"
					},
					{
						"folder name": "netflix_category",
						"file name": "netflix_category.csv"
					},
					{
						"folder name": "netflix_countries",
						"file name": "netflix_countries.csv"
					},
					{
						"folder name": "netflix_directors",
						"file name": "netflix_directors.csv"
					}
				]
			}
		},
		"variables": {
			"gitupmetadata": {
				"type": "String"
			}
		},
		"annotations": []
	}
}